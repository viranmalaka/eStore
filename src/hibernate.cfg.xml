<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ License: GNU Lesser General Public License (LGPL), version 2.1 or later.
  ~ See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
  -->
<hibernate-configuration>
  <session-factory>
    <!-- Database connection settings -->
    <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
    <property name="connection.url">jdbc:mysql://localhost/estore</property>
    <property name="connection.username">root</property>
    <property name="connection.password">root</property>
    <!-- JDBC connection pool (use the built-in) -->
    <property name="connection.pool_size">1</property>
    <!-- SQL dialect - this says the sql syntax to be execute -->
    <property name="dialect">org.hibernate.dialect.MySQLDialect</property>
    <!-- Enable Hibernate's automatic session context management - this says
        	what kind of query want to be execute
        	create - remove all previouse tabels and create or recreate the all
        	update - keep prevouse and add new 
        -->
    <property name="hbm2ddl.auto">update</property>
    <!-- Echo all executed SQL to stdout 
	    	do we want to print the executed sql queries?
	    -->
    <property name="show_sql">true</property>
    <!-- path of the class that put @entity annotation -->
    <mapping class="model.Customer"/>
    <mapping class="model.Supplier"/>
    <mapping class="model.Item"/>
    <mapping class="model.PurchaseOrder"/>
    <mapping class="model.PurchaseOrderItem"/>
  </session-factory>
</hibernate-configuration>
